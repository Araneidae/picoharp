alias("$(DEVICE):BUCKETS_5", "$(DEVICE):BUCKETS")
alias("$(DEVICE):FLUX_5", "$(DEVICE):FLUX")


record(ai, "$(DEVICE):MAX_BIN") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT))max_bin")
  field(EGU,  "counts")
  field(HIGH, "59000")
  field(HIHI, "65535")
  field(HSV,  "MINOR")
  field(HHSV, "MAJOR")
  field(DESC, "Maximum bin count")
  field(SCAN, "Event")
  field(EVNT, "$(EVENT_FAST)")
}

record(ai, "$(DEVICE):COUNT_RATE_0") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT))count_rate_0")
  field(EGU,  "Hz")
  field(PREC, "0")
  field(DESC, "Master clock count rate")
  field(SCAN, "Event")
  field(EVNT, "$(EVENT_FAST)")
}

record(ai, "$(DEVICE):COUNT_RATE_1") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT))count_rate_1")
  field(EGU,  "Hz")
  field(PREC, "0")
  field(DESC, "Sample data count rate")
  field(SCAN, "Event")
  field(EVNT, "$(EVENT_FAST)")
}

record(ai, "$(DEVICE):RESOLUTION") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT))resolution")
  field(EGU,  "ps")
  field(PREC, "0")
  field(DESC, "Histogram bin width")
  field(SCAN, "Event")
  field(EVNT, "$(EVENT_FAST)")
}

record(stringin, "$(DEVICE):ERROR") {
  field(SCAN, "1 second")
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT))errstr")
  field(DESC, "Picoharp error string")
}

record(stringin, "$(DEVICE):RESET_TIME") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT))reset_time")
  field(DESC, "Time long term history last reset")
  field(SCAN, "Event")
  field(EVNT, "$(EVENT_5S)")
}



# Environmental readbacks

record(ao, "$(DEVICE):DCCT") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT))charge")
  field(DOL,  "SR23C-DI-DCCT-01:CHARGE CP MS")
  field(OMSL, "closed_loop")
  field(DESC, "DCCT charge")
}

record(ao, "$(DEVICE):DCCT:ALARM") {
  field(SCAN, ".1 second")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT))dcct_alarm")
  field(DOL,  "$(DEVICE):DCCT.SEVR")
  field(OMSL, "closed_loop")
  field(DESC, "DCCT alarm status")
}

record(ao, "$(DEVICE):FREQ") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT))freq")
  field(DOL,  "LI-RF-MOSC-01:FREQ CP MS")
  field(OMSL, "closed_loop")
  field(DESC, "Master oscillator frequency")
}

#% autosave 2 VAL
record(ao, "$(DEVICE):TIME") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT))time")
  field(EGU,  "ms")
  field(PREC, "0")
  field(LOPR, "1")
  field(HOPR, "60000")
  field(DESC, "Acquisition time")
}

#% autosave 2 VAL
record(ao, "$(DEVICE):SHIFT") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT))shift")
  field(EGU,  "bucket")
  field(PREC, "0")
  field(LOPR, "0")
  field(HOPR, "935")
  field(DESC, "Circular Shift")
}

#% autosave 2 VAL
record(ao, "$(DEVICE):SAMPLE_WIDTH") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT))sample_width")
  field(EGU,  "bins")
  field(PREC, "0")
  field(LOPR, "1")
  field(HOPR, "62")
  field(DESC, "Sample width")
}


#% autosave 2 VAL
record(ao, "$(DEVICE):OFFSET") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT))Offset")
  field(EGU,  "ps")
  field(PREC, "0")
  field(LOPR, "0")
  field(HOPR, "1000000000")
  field(DESC, "Offset in picoseconds")
}

#% autosave 2 VAL
record(ao, "$(DEVICE):CFDZEROX0") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT))CFDZeroX0")
  field(EGU,  "mV")
  field(PREC, "0")
  field(LOPR, "0")
  field(HOPR, "20")
  field(DESC, "Clock zero cross level")
}

#% autosave 2 VAL
record(ao, "$(DEVICE):CFDZEROX1") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT))CFDZeroX1")
  field(EGU,  "mV")
  field(PREC, "0")
  field(LOPR, "0")
  field(HOPR, "20")
  field(DESC, "Data zero cross level")
}

#% autosave 2 VAL
record(ao, "$(DEVICE):CFDLEVEL0") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT))CFDLevel0")
  field(EGU,  "mV")
  field(PREC, "0")
  field(LOPR, "0")
  field(HOPR, "800")
  field(DESC, "Clock discriminator level")
}

#% autosave 2 VAL
record(ao, "$(DEVICE):CFDLEVEL1") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT))CFDLevel1")
  field(EGU,  "mV")
  field(PREC, "0")
  field(LOPR, "0")
  field(HOPR, "800")
  field(DESC, "Data discriminator level")
}

#% autosave 2 VAL
record(ao, "$(DEVICE):SYNCDIV") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT))SyncDiv")
  field(EGU,  "")
  field(PREC, "0")
  field(LOPR, "0")
  field(HOPR, "8")
  field(DESC, "Input rate divider")
}

#% autosave 2 VAL
record(ao, "$(DEVICE):RANGE") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT))Range")
  field(EGU,  "")
  field(PREC, "0")
  field(LOPR, "0")
  field(HOPR, "7")
  field(DESC, "Measurement range code")
}

#% autosave 2 VAL
record(ao, "$(DEVICE):DEADTIME") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT))deadtime")
  field(EGU,  "")
  field(PREC, "0")
  field(LOPR, "0")
  field(HOPR, "936")
  field(DESC, "Detector dead time")
}

#% autosave 2 VAL
record(ao, "$(DEVICE):RESET_ACCUM") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT))reset_accum")
  field(DESC, "Reset long term waveform")
}
